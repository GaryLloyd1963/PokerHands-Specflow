// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.Acceptance
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PokerHands")]
    public partial class PokerHandsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PokerHandsAcceptance.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PokerHands", "In order to build a superb online poker casino\r\nAs the program developer\r\nI want " +
                    "to be able to compare 2 poker hands", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight Flush. Given a low straight flush and a high straight flush dealt to pla" +
            "yers Black and White")]
        public virtual void StraightFlush_GivenALowStraightFlushAndAHighStraightFlushDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight Flush. Given a low straight flush and a high straight flush dealt to pla" +
                    "yers Black and White", ((string[])(null)));
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("the hand dealt to Black is \'4S 5S 6S 7S 8S\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("the hand dealt to White is  \'9C TC JC QC KC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("the comparison result is \'White wins - straight flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight Flush. Given a high straight flush and a low straight flush dealt to pla" +
            "yers Black and White")]
        public virtual void StraightFlush_GivenAHighStraightFlushAndALowStraightFlushDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight Flush. Given a high straight flush and a low straight flush dealt to pla" +
                    "yers Black and White", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("the hand dealt to Black is \'8S 9S TS JS QS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.And("the hand dealt to White is  \'4D 5D 6D 7D 8D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("the comparison result is \'Black wins - straight flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight Flush. Given a 4 of a kind hand and a straight flush dealt to players Bl" +
            "ack and White")]
        public virtual void StraightFlush_GivenA4OfAKindHandAndAStraightFlushDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight Flush. Given a 4 of a kind hand and a straight flush dealt to players Bl" +
                    "ack and White", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("the hand dealt to Black is \'2H 2D 2S 2C KD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.And("the hand dealt to White is  \'4C 5C 6C 7C 8C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("the comparison result is \'White wins - straight flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight Flush. Given a 2 equal straight flushes dealt to players Black and White" +
            "")]
        public virtual void StraightFlush_GivenA2EqualStraightFlushesDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight Flush. Given a 2 equal straight flushes dealt to players Black and White" +
                    "", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("the hand dealt to Black is \'4D 5D 6D 7D 8D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.And("the hand dealt to White is  \'4C 5C 6C 7C 8C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("the comparison result is \'Tie\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Four of a kind. Given a high 4 of a kind and a low 4 of a kind dealt to players B" +
            "lack and White")]
        public virtual void FourOfAKind_GivenAHigh4OfAKindAndALow4OfAKindDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Four of a kind. Given a high 4 of a kind and a low 4 of a kind dealt to players B" +
                    "lack and White", ((string[])(null)));
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("the hand dealt to Black is \'KH KS KC KD 2C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.And("the hand dealt to White is  \'3H 3S 3C 3D 8S\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("the comparison result is \'Black wins - four of a kind\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Four of a kind. Given an Ace high and a 4 of a kind dealt to players Black and Wh" +
            "ite")]
        public virtual void FourOfAKind_GivenAnAceHighAndA4OfAKindDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Four of a kind. Given an Ace high and a 4 of a kind dealt to players Black and Wh" +
                    "ite", ((string[])(null)));
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
 testRunner.Given("the hand dealt to Black is \'AH 2S KC 4D 6S\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 42
 testRunner.And("the hand dealt to White is  \'2C 7H 7S 7C 7D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("the comparison result is \'White wins - four of a kind\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Four of a kind. Given a low 4 of a kind and a high 4 of a kind dealt to players B" +
            "lack and White")]
        public virtual void FourOfAKind_GivenALow4OfAKindAndAHigh4OfAKindDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Four of a kind. Given a low 4 of a kind and a high 4 of a kind dealt to players B" +
                    "lack and White", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
 testRunner.Given("the hand dealt to Black is \'5H 5S 5C 5D 9S\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("the hand dealt to White is  \'AH AS AC AD 6C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("the comparison result is \'White wins - four of a kind\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Full house. Given a high card hand and a full house dealt to players Black and Wh" +
            "ite")]
        public virtual void FullHouse_GivenAHighCardHandAndAFullHouseDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Full house. Given a high card hand and a full house dealt to players Black and Wh" +
                    "ite", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("the hand dealt to Black is \'6H 3D AH 2D 5C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("the hand dealt to White is  \'8H 8D 8C KD KH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("the comparison result is \'White wins - full house\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Full house. Given a full house and a high card hand dealt to players Black and Wh" +
            "ite")]
        public virtual void FullHouse_GivenAFullHouseAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Full house. Given a full house and a high card hand dealt to players Black and Wh" +
                    "ite", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("the hand dealt to Black is \'4C 6D 6H 4H 4D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.And("the hand dealt to White is  \'2H 3D KC QD AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("the comparison result is \'Black wins - full house\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Flush. Given a high card and a flush dealt to players Black and White")]
        public virtual void Flush_GivenAHighCardAndAFlushDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Flush. Given a high card and a flush dealt to players Black and White", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("the hand dealt to Black is \'2H 4S 8C 7D AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.And("the hand dealt to White is  \'2S 8S AS QS 3S\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("the comparison result is \'White wins - flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Flush. Given a flush and a high card hand dealt to players Black and White")]
        public virtual void Flush_GivenAFlushAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Flush. Given a flush and a high card hand dealt to players Black and White", ((string[])(null)));
#line 74
this.ScenarioSetup(scenarioInfo);
#line 75
 testRunner.Given("the hand dealt to Black is \'3H 2H KH QH 7H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
 testRunner.And("the hand dealt to White is  \'2D 4S 6C 7D AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("the comparison result is \'Black wins - flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Flush. Given 2 unequal flushes dealt to players Black and White")]
        public virtual void Flush_Given2UnequalFlushesDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Flush. Given 2 unequal flushes dealt to players Black and White", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line 81
 testRunner.Given("the hand dealt to Black is \'3H 2H KH QH 7H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.And("the hand dealt to White is  \'2D 4D 7D QD AD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then("the comparison result is \'White wins - flush\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Flush. Given 2 equal flushes dealt to players Black and White")]
        public virtual void Flush_Given2EqualFlushesDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Flush. Given 2 equal flushes dealt to players Black and White", ((string[])(null)));
#line 86
this.ScenarioSetup(scenarioInfo);
#line 87
 testRunner.Given("the hand dealt to Black is \'3H 2H KH QH 7H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
 testRunner.And("the hand dealt to White is  \'KC 3C 7C 2C QC\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.Then("the comparison result is \'Tie\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight. Given a high card hand, and a straight, dealt to players Black and Whit" +
            "e")]
        public virtual void Straight_GivenAHighCardHandAndAStraightDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight. Given a high card hand, and a straight, dealt to players Black and Whit" +
                    "e", ((string[])(null)));
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
 testRunner.Given("the hand dealt to Black is \'2H 3D 5S 9C AD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
 testRunner.And("the hand dealt to White is  \'AC 2D 3S 4C 5H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then("the comparison result is \'White wins - straight\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight. Given a straight and a high card hand dealt to players Black and White")]
        public virtual void Straight_GivenAStraightAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight. Given a straight and a high card hand dealt to players Black and White", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
 testRunner.Given("the hand dealt to Black is \'2H 3D 4S 5C 6D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
 testRunner.And("the hand dealt to White is  \'KC 2D 3S 4C 5H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("the comparison result is \'Black wins - straight\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Straight. Given 2 equal straights dealt to players Black and White")]
        public virtual void Straight_Given2EqualStraightsDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Straight. Given 2 equal straights dealt to players Black and White", ((string[])(null)));
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given("the hand dealt to Black is \'2H 3D 4S 5C 6D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.And("the hand dealt to White is  \'2C 3H 4C 5H 6C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.Then("the comparison result is \'Tie\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Three of a kind. Given a high card hand, and trips, dealt to players Black and Wh" +
            "ite")]
        public virtual void ThreeOfAKind_GivenAHighCardHandAndTripsDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Three of a kind. Given a high card hand, and trips, dealt to players Black and Wh" +
                    "ite", ((string[])(null)));
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("the hand dealt to Black is \'2H 3D 5S 9C AD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
 testRunner.And("the hand dealt to White is  \'AC AD AS 4C 5H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.Then("the comparison result is \'White wins - trips\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Three of a kind. Given trips and a high card hand dealt to players Black and Whit" +
            "e")]
        public virtual void ThreeOfAKind_GivenTripsAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Three of a kind. Given trips and a high card hand dealt to players Black and Whit" +
                    "e", ((string[])(null)));
#line 120
this.ScenarioSetup(scenarioInfo);
#line 121
 testRunner.Given("the hand dealt to Black is \'3C 3D 3S KC AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
 testRunner.And("the hand dealt to White is  \'2H 3D 5S 9C AD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
 testRunner.Then("the comparison result is \'Black wins - trips\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Three of a kind. Given trips dealt to players Black and White")]
        public virtual void ThreeOfAKind_GivenTripsDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Three of a kind. Given trips dealt to players Black and White", ((string[])(null)));
#line 126
this.ScenarioSetup(scenarioInfo);
#line 127
 testRunner.Given("the hand dealt to Black is \'KC KD KS 2C AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
 testRunner.And("the hand dealt to White is  \'JC JD JS 8C 4H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.Then("the comparison result is \'Black wins - trips\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Two pairs. Given a high card hand and a two pair dealt to players Black and White" +
            "")]
        public virtual void TwoPairs_GivenAHighCardHandAndATwoPairDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Two pairs. Given a high card hand and a two pair dealt to players Black and White" +
                    "", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
 testRunner.Given("the hand dealt to Black is \'2H 5S KD 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.And("the hand dealt to White is  \'KC KH 4S 4C AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.Then("the comparison result is \'White wins - two pairs\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Two pairs. Given a two pairs hand and a high card hand dealt to players Black and" +
            " White")]
        public virtual void TwoPairs_GivenATwoPairsHandAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Two pairs. Given a two pairs hand and a high card hand dealt to players Black and" +
                    " White", ((string[])(null)));
#line 140
this.ScenarioSetup(scenarioInfo);
#line 141
 testRunner.Given("the hand dealt to Black is \'KC KH 4S 4C AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
 testRunner.And("the hand dealt to White is  \'2H 5S KD 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.Then("the comparison result is \'Black wins - two pairs\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Two pairs. Given a equal two pairs hands with unequal kickers dealt to players Bl" +
            "ack and White")]
        public virtual void TwoPairs_GivenAEqualTwoPairsHandsWithUnequalKickersDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Two pairs. Given a equal two pairs hands with unequal kickers dealt to players Bl" +
                    "ack and White", ((string[])(null)));
#line 146
this.ScenarioSetup(scenarioInfo);
#line 147
 testRunner.Given("the hand dealt to Black is \'KC KH 4S 4C 2H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
 testRunner.And("the hand dealt to White is  \'KD KS 4D 4H 8H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.Then("the comparison result is \'White wins - two pairs\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Two pairs. Given a equal two pairs hands with equal kickers dealt to players Blac" +
            "k and White")]
        public virtual void TwoPairs_GivenAEqualTwoPairsHandsWithEqualKickersDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Two pairs. Given a equal two pairs hands with equal kickers dealt to players Blac" +
                    "k and White", ((string[])(null)));
#line 152
this.ScenarioSetup(scenarioInfo);
#line 153
 testRunner.Given("the hand dealt to Black is \'KC KH 4S 4C 8C\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.And("the hand dealt to White is  \'KD KS 4D 4H 8H\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.Then("the comparison result is \'Tie\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pairs. Given a high card hand and a pair dealt to players Black and White")]
        public virtual void Pairs_GivenAHighCardHandAndAPairDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pairs. Given a high card hand and a pair dealt to players Black and White", ((string[])(null)));
#line 160
this.ScenarioSetup(scenarioInfo);
#line 161
 testRunner.Given("the hand dealt to Black is \'2H 5S KD 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("the hand dealt to White is  \'3C KC KH 4S QH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
 testRunner.Then("the comparison result is \'White wins - pair\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pairs. Given a pair and a high card hand dealt to players Black and White")]
        public virtual void Pairs_GivenAPairAndAHighCardHandDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pairs. Given a pair and a high card hand dealt to players Black and White", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
 testRunner.Given("the hand dealt to Black is \'3C KC KH 4S QH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
 testRunner.And("the hand dealt to White is  \'2H 5S KD 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then("the comparison result is \'Black wins - pair\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pairs. Given pair hands dealt to players Black and White")]
        public virtual void Pairs_GivenPairHandsDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pairs. Given pair hands dealt to players Black and White", ((string[])(null)));
#line 172
this.ScenarioSetup(scenarioInfo);
#line 173
 testRunner.Given("the hand dealt to Black is \'3C KC KH 4S QH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
 testRunner.And("the hand dealt to White is  \'2H 5S 5D 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 176
 testRunner.Then("the comparison result is \'Black wins - pair\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pairs. Given equal pair hands with unequal kickers dealt to players Black and Whi" +
            "te")]
        public virtual void Pairs_GivenEqualPairHandsWithUnequalKickersDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pairs. Given equal pair hands with unequal kickers dealt to players Black and Whi" +
                    "te", ((string[])(null)));
#line 178
this.ScenarioSetup(scenarioInfo);
#line 179
 testRunner.Given("the hand dealt to Black is \'3C KC KH 4S QH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 180
 testRunner.And("the hand dealt to White is  \'2H KS KD 9C 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 182
 testRunner.Then("the comparison result is \'Black wins - pair\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Pairs. Given equal pair hands with equal kickers dealt to players Black and White" +
            "")]
        public virtual void Pairs_GivenEqualPairHandsWithEqualKickersDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Pairs. Given equal pair hands with equal kickers dealt to players Black and White" +
                    "", ((string[])(null)));
#line 184
this.ScenarioSetup(scenarioInfo);
#line 185
 testRunner.Given("the hand dealt to Black is \'3C KC KH 4S QH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
 testRunner.And("the hand dealt to White is  \'4H KS KD QC 3D\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
 testRunner.Then("the comparison result is \'Tie\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("High card. Given 2 high card hands, king high, and ace high, dealt to players Bla" +
            "ck and White")]
        public virtual void HighCard_Given2HighCardHandsKingHighAndAceHighDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("High card. Given 2 high card hands, king high, and ace high, dealt to players Bla" +
                    "ck and White", ((string[])(null)));
#line 191
this.ScenarioSetup(scenarioInfo);
#line 192
 testRunner.Given("the hand dealt to Black is \'2H 3D 5S 9C KD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
 testRunner.And("the hand dealt to White is  \'2C 3H 4S 8C AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 195
 testRunner.Then("the comparison result is \'White wins - high card\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("High card. Given 2 high card hands, ace high, and king high, dealt to players Bla" +
            "ck and White")]
        public virtual void HighCard_Given2HighCardHandsAceHighAndKingHighDealtToPlayersBlackAndWhite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("High card. Given 2 high card hands, ace high, and king high, dealt to players Bla" +
                    "ck and White", ((string[])(null)));
#line 197
this.ScenarioSetup(scenarioInfo);
#line 198
 testRunner.Given("the hand dealt to Black is \'2C 3H 4S 8C AH\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 199
 testRunner.And("the hand dealt to White is  \'2H 3D 5S 9C KD\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.When("I compare the hands", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.Then("the comparison result is \'Black wins - high card\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
